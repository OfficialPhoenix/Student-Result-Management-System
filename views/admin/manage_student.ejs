<!DOCTYPE html>
<html lang="en">
<head>
   <meta charset="UTF-8">
   <meta name="viewport" content="width=device-width, initial-scale=1.0">
   <title>Manage Student</title>
   <link rel="page icon" type="icon" href="/fcahptib.png">
   <link rel="stylesheet" 
    href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
   <link rel="stylesheet" href="/style2.css">
   <style>
     .display-result{
         padding: 10px;
         margin: auto;
         overflow-x: scroll;
      }
      #students{
         width: 100%;
         border-collapse: collapse;
         font-family: Arial, Helvetica, sans-serif;
         overflow-x: scroll;
      }
      #students td, #students th{
         /* padding: 8px; */
         text-align: center;
         border-bottom: 1px solid #ddd;
      }
      #students th{
         background-color: rgb(175, 35, 35);
         color: white;
         font-size: 14px;
         text-align: center;
         padding: 10px;
         text-transform: capitalize;
      }
      #students td{
         font-size: 12px;
         background-color: #f2f2f2;
         padding: 7px;
      }
      .deletebtn{
        border: none;
        cursor: pointer;
        background-color: rgb(175, 35, 35);
        padding: 5px;
        font-size: 14px;
        font-family: calibri;
        border-radius: 2px;
        width: 70px;
        /* color: #fff; */
      }
      .updatebtn{
        border: none;
        cursor: pointer;
        background-color:rgb(37, 164, 248);
        padding: 5px;
        font-size: 14px;
        font-family: calibri;
        border-radius: 2px;
        width: 70px;
        /* color: #fff; */
      }
      .mydata{
        border: none;
        background: transparent;
        text-align: center;
      }
      .hidden {
       clip: rect(0 0 0 0);
       clip-path: inset(50%);
       height: 1px;
       overflow: hidden;
       position: absolute;
       white-space: nowrap;
       width: 1px;
      }
      .pagination{
        margin-top: 10px;
        display: flex;
        flex-wrap: wrap;
        gap: 12px;
      }
      .pagination button{
        border: none;
        float: left;
        padding: 8px 16px;
        background: transparent;
        transition: background-color .3s;
      }
      .pagination button:hover, .pagination button.active{
        background-color: rgb(37, 164, 248);
      }
      #filterTable{
        width: 200px;
        padding: 3px;
        outline: none;
        border: 1px solid;
      }
      #filterParagraph{
        margin-bottom: 10px;
      }
   </style>
</head>
<body>
   <div class="header">
      <center><img src="/fcahptib.png" alt="" height="50"></center>
      <h3 style="color: white; font-family: calibri; text-align: center;">
          Administrator Section</h3>
  </div>
  <div class="menu-bar">
      <a href="/admin/dashboard">Dashboard</a>
      <!-- Academic Session -->
      <div class="dropdown">
         <button class="dropbtn">Session
           <i class="fa fa-caret-down"></i>
         </button>
         <div class="dropdown-content">
           <a href="/admin/update_session">Update academic session</a>
         </div>
       </div>  
       <!-- Academic Semester -->
       <div class="dropdown">
         <button class="dropbtn">Semester
           <i class="fa fa-caret-down"></i>
         </button>
         <div class="dropdown-content">
           <a href="/admin/update_semester">Update academic semester</a>
         </div>
       </div> 
      <!-- result section -->
      <div class="dropdown">
          <button class="dropbtn">Result
            <i class="fa fa-caret-down"></i>
          </button>
          <div class="dropdown-content">
            <a href="/admin/upload_result">Upload result</a>
            <a href="/admin/manage_result">Manage result</a>
          </div>
        </div>        

        <!-- student section -->
        <div class="dropdown">
          <button class="dropbtn">Student
            <i class="fa fa-caret-down"></i>
          </button>
          <div class="dropdown-content">
            <a href="/admin/add_student">Add student</a>
            <a href="/admin/manage_student">Manage student</a>
          </div>
        </div>
        <!-- Admin section -->
        <div class="dropdown">
          <button class="dropbtn">Admin
            <i class="fa fa-caret-down"></i>
          </button>
        <div class="dropdown-content">
          <a href="/admin/add_admin">Add New Admin</a>
          <a href="/admin/manage_admin">Manage Admin</a>
        </div>
        </div>
      <!-- course section -->
      <div class="dropdown">
          <button class="dropbtn">Course
            <i class="fa fa-caret-down"></i>
          </button>
          <div class="dropdown-content">
            <a href="/admin/add_course">Add course</a>
            <a href="/admin/manage_course">Manage courses</a>
          </div>
        </div>
      <a href="/admin/logout" id="logout">Logout</a>
      <a href="/admin/change_password">Change Password</a>
  </div>
  <!-- <div>
      <p>Current Session:</p>
      <p>Current Semester:</p>
      <p>Date:<span id="Cdate"></span></p>
  </div> -->
  <p style="margin: 10px 0px 0px 30px; font-size: 21px; font-family: 'Times New Roman', Times, serif">
    Manage Students Record</p>
   <div class="display-result">
    <p id="filterParagraph">Filter students:
    <input type="text" id="filterTable" placeholder="search for student..."></p>
         <article class="innerTable">
      <table id="students">
         <tr>
         <th>S/N</th>
         <th>MatricNo</th>
         <th>LastName</th>
         <th>FirstName</th>
         <th>MidleName</th>
         <th>Email</th>
         <th>Department</th>
         <th>Year of Admission</th>
         <th>Sex</th>
         <th>Level</th>
         <th>Password</th>
         <th>Action</th>
         
         </tr>
         <%for(let i = 1; i <= result.length; i++){%>
         <%result.forEach(res => {%>
         <tr id="data">
            <td><%=i++%></td>
            <td contenteditable="false" data-column="matric"><%=res.MatricNo%></td>
            <td contenteditable="true" data-column="lastname"><%=res.Lastname%></td>
            <td contenteditable="true" data-column="firstname"><%=res.Firstname%></td>
            <td contenteditable="true" data-column="middlename"><%=res.Middlename%></td>
            <td contenteditable="true" data-column="email"><%=res.Email%></td>
            <td contenteditable="true" data-column="department"><%=res.Department%></td>
            <td contenteditable="true" data-column="adYear"><%=res.Admission_Year%></td>
            <td contenteditable="true" data-column="sex"><%=res.sex%></td>
            <td contenteditable="true" data-column="level"><%=res.Level%></td>
            <td contenteditable="true" data-column="password"><%=res.Passcode%></td>
            <td style="display: flex; gap: 10px;">
              <button class="updatebtn">Update<i class="fa fa-edit"></i></button>
              <button class="deletebtn">Delete<i class="fa fa-trash-o"></i>
              </button>
            </td>
         </tr>
         <%})%>
         <%}%>
      </table>
      </article>
   </div>
   </table>
   <div class="footer">
      <footer>
         <span style="font-size: 15px; text-align: center;
         font-style: normal; font-family: Arial, Helvetica, sans-serif; color: gray;">&copy; <span id="cr"></span> FCAHPTIB.</span>
      </footer>
      </div>

    <!-- Javascript code goes here-->

    <script>
  //get date full year and render it in footer
  let date = new Date()
  document.getElementById("cr").innerHTML = date.getFullYear();

  //Logout function
  document.querySelector('#logout').addEventListener('click', (e)=>{
      if(confirm('Are sure you want to logout?') == true){
       fetch('/admin/logout',{
       method: 'get'})
      }else{
       e.preventDefault()
   }
   
})


document.querySelectorAll('.updatebtn').forEach(button => {
button.addEventListener('click', function(){

const row = this.closest('tr');
const data = {
  matric: row.cells[1].innerText,
  lastname: row.cells[2].innerText,
  firstname: row.cells[3].innerText,
  middlename: row.cells[4].innerText,
  email: row.cells[5].innerText,
  department: row.cells[6].innerText,
  adYear: row.cells[7].innerText,
  sex: row.cells[8].innerText,
  level: row.cells[9].innerText,
  password: row.cells[10].innerText
};
if(confirm(`Are sure you want to update student record with matric number ${data.matric}?`) == true){
        //Send data to the server
        updateStudent(data);
      }else{
       e.preventDefault()
   }
})
})

document.querySelectorAll('.deletebtn').forEach(button => {
  button.addEventListener('click', function(){
    const row = this.closest('tr');
    const data = {matric:row.cells[1].innerText};
    if(confirm(`Are sure you want to delete student with matric number ${data.matric}?`) == true){
        //Send data to the server
        deleteStudent(data);
      }else{
       e.preventDefault()
   }
  })
})


function updateStudent(data){
fetch('/admin/update_student', {
  method: 'POST',
  headers:{
    'Content-Type': 'application/json',
  },
  body:JSON.stringify(data)
})
.then(response => {response.json();
  if(response.ok){
    alert(`Student with matric number ${data.matric} record updated successfully!`)
  }else{
    alert("Unable to update student record!")
  }
  })
}
function deleteStudent(data){
  fetch('/admin/delete_student', {
    method: 'POST',
    headers:{
      'Content-Type': 'application/json'
    },
    body:JSON.stringify(data)
  })
  .then(response => {
    response.json();
    if(response.ok){
      alert(`student with the matric number ${data.matric} has been deleted!`)
      window.location.href('/admin/manage_student')
    }else{
      alert('Unable to delete student record')
    }
  })
}
//when all documents are fully loaded
document.addEventListener('DOMContentLoaded', function () {
  const content = document.querySelector('.innerTable'); 
  const itemsPerPage = 10;
  let currentPage = 0;
  const items = Array.from(content.getElementsByTagName('tr')).slice(1);

  //Show page function
  function showPage(page) {
  const startIndex = page * itemsPerPage;
  const endIndex = startIndex + itemsPerPage;
  items.forEach((item, index) => {
    item.classList.toggle('hidden', index < startIndex || index >= endIndex);
  });
  updateActiveButtonStates();
  filterResult()
}

//Create page buttons function
function createPageButtons() {
  const totalPages = Math.ceil(items.length / itemsPerPage);
  const paginationContainer = document.createElement('div');
  const paginationDiv = document.body.appendChild(paginationContainer);
  paginationContainer.classList.add('pagination');

for (let i = 0; i < totalPages; i++) {
const pageButton = document.createElement('button');
pageButton.classList.add('active')
pageButton.textContent = i + 1;
pageButton.addEventListener('click', () => {
  currentPage = i;
  showPage(currentPage);
  updateActiveButtonStates();
})
content.appendChild(paginationContainer);
paginationDiv.appendChild(pageButton);
}
filterResult()
}
function updateActiveButtonStates() {
  const pageButtons = document.querySelectorAll('.pagination button');
  pageButtons.forEach((button, index) => {
    if (index === currentPage) {
      button.classList.add('active');
    } else {
      button.classList.remove('active');
    }
  })
  filterResult()
}
createPageButtons();
showPage(currentPage);

})

function filterResult(){
//Get the input field and table
const filterTable = document.getElementById('filterTable');
const table = document.getElementById('students');

//Add event listener for input change
filterTable.addEventListener('keyup', function(){
  //Get the value of the input field
  const filterValue = filterTable.value.toLowerCase();
  //Get all rows in the table (excluding the header row)
  const rows = table.getElementsByTagName("tr");

  //Loop through all table rows
  for(let i = 1; i < rows.length; i++){
    const cells = rows[i].getElementsByTagName("td");
    let rowText = '';

  //Loop through each cell in the row (we can choose which column to filter)
  for(let j = 0; j < cells.length; j++){
    rowText += cells[j].innerText.toLowerCase();
  }
  if(rowText.indexOf(filterValue) > -1){
    rows[i].style.display = '';
  }else{
    rows[i].style.display = 'none'
  }
  }
})
}
filterResult();
    </script>
</body>
</html>